name: Release

on:
  push:
    branches: [ main ]
    # tags:
    #   - "v*" # e.g. v1.2.3

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y libmagic-dev gcc-mingw-w64-x86-64

      - name: Add Windows target
        run: |
          rustup target add x86_64-pc-windows-gnu
          rustup toolchain install stable-x86_64-pc-windows-gnu

      - name: Build Linux binary
        run: cargo build --release

      - name: Build Windows binary
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: library-rs-linux
          path: target/release/library-rs

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: library-rs-windows
          path: target/x86_64-pc-windows-gnu/release/library-rs.exe

  test-windows:
    runs-on: windows-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v5

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: library-rs-windows
          path: ./bin

      - name: Run tests
        run: ./bin/library-rs.exe --help

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install deps
        run: brew install libmagic

      - name: Build macOS binary
        run: cargo build --release
        env:
          PKG_CONFIG_PATH: /opt/homebrew/lib/pkgconfig
          LIBRARY_PATH: /opt/homebrew/lib
          CPATH: /opt/homebrew/include

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: library-rs-macos
          path: target/release/library-rs

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, test-windows, build-macos]
    steps:
      - uses: actions/checkout@v5

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Install cargo-binstall
        run: cargo install cargo-binstall

      - name: Generate binstall manifest
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          cargo binstall package \
            --version $VERSION \
            --version ${{ steps.version.outputs.version }} \
            --github-org ${{ github.repository_owner }} \
            --github-repo ${{ github.event.repository.name }}
            --github-repo ${{ github.event.repository.name }} \
            --output ./artifacts/library-rs-${{ steps.version.outputs.version }}.binstall.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          files: |
            artifacts/library-rs-linux/library-rs
            artifacts/library-rs-windows/library-rs.exe
            artifacts/library-rs-macos/library-rs
            artifacts/library-rs-${{ steps.version.outputs.version }}.binstall.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
